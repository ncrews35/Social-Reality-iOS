type EmailModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: String!
  provider: AuthenticationProvider!
}

enum AuthenticationProvider {
  GOOGLE
  FACEBOOK
  APPLE
  EMAIL
}

type LikeModel @model @auth(rules: [{allow: public}]) @key(name: "byCreationModel", fields: ["creationID"]) {
  id: ID!
  status: String
  creationID: ID
  userID: String
  userImage: String
  userName: String
}

type CommentModel @model @auth(rules: [{allow: public}]) @key(name: "byCreationModel", fields: ["creationID"]) {
  id: ID!
  content: String!
  status: String
  creationID: ID
  userID: String
  userImage: String
  userName: String
}

type CreationModel @model @auth(rules: [{allow: public}]) @key(name: "byUserModel", fields: ["userID"]) {
  id: ID!
  title: String
  description: String
  lastViewed: String
  accessibility: CreationAccessibility!
  status: String
  date: AWSDate
  userID: ID
  comments: [CommentModel] @connection(keyName: "byCreationModel", fields: ["id"])
  likes: [LikeModel] @connection(keyName: "byCreationModel", fields: ["id"])
  userName: String
  userImage: String
}

enum CreationAccessibility {
  PUBLIC
  PRIVATE
  PERSONAL
}

enum ProfileAccessibility {
  PUBLIC
  PRIVATE
  PROFESSIONAL
}

type UserModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  status: String
  first: String
  last: String
  lastActive: String
  access: ProfileAccessibility!
  email: String!
  image: String
  provider: AuthenticationProvider!
  creations: [CreationModel] @connection(keyName: "byUserModel", fields: ["id"])
}
 